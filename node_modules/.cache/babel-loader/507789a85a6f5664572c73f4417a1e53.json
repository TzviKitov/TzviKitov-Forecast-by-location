{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zvito\\\\WebstormProjects\\\\ex3-ex3-tzvikitov_-_elifrancenhois\\\\src\\\\components\\\\DisplaysForecastResults.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst useDataApi = (theUrl, date) => {\n  _s();\n\n  const [data, setData] = useState({}); // data to be fetched\n  // const [url, setUrl] = useState(initialUrl); // url to be fetched\n\n  const [isLoading, setIsLoading] = useState(false); // is it fetching?\n\n  const [error, setError] = useState(false, \"\"); // is there an error?\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setError(false, \"\"); // reset error state\n\n      setIsLoading(true); // set loading state to true to show loading indicator for example\n\n      try {\n        const result = await axios(theUrl);\n        setData(result.data); // set data state\n      } catch (err) {\n        setError({\n          isError: true,\n          msg: err.message()\n        }); // an error occurred, set error state to true\n      }\n\n      setIsLoading(false); // set loading state to false to hide loading indicator\n    };\n\n    fetchData(); // execute the function above\n  }, []); // fetchData(); // execute the function above\n  // trigger the effect when url changes\n\n  return {\n    data,\n    isLoading,\n    error\n  }; // return the data and the URL setter function\n};\n\n_s(useDataApi, \"NDaD1v7Ig62dRBm0wnncFTnuDY0=\");\n\nuseEffect(() => {\n  // this code returns a promise, but an effect can only return void or a cleanup function.\n  // so we need to wrap the promise in a function that returns void\n  const fetchData = async () => {\n    setIsError(false); // reset error state\n\n    setIsLoading(true); // set loading state to true to show loading indicator for example\n\n    try {\n      const result = await axios(url);\n      setData(result.data); // set data state\n    } catch (error) {\n      seterror(true); // an error occurred, set error state to true\n    }\n\n    setIsLoading(false); // set loading state to false to hide loading indicator\n  };\n\n  fetchData(); // execute the function above\n}, [url]); // trigger\n\nconst DisplaysForecastResults = props => {\n  _s2();\n\n  const [{\n    data,\n    isLoading,\n    error\n  }, doFetch] = useDataApi(\"\", props.theLocation);\n  doFetch(`https://www.7timer.info/bin/api.pl?lon=${props.theLocation.longitude}&lat=${props.theLocation.latitude}&product=civillight&output=json`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.theLocation.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https:www.7timer.info/bin/astro.php?%20lon=${props.theLocation.longitude}&lat=${props.theLocation.latitude}&ac=0&lang=en&unit=metric&output=internal&tzshift=0`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [error.isError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Something went wrong (\", error.msg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 35\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: data.dataseries.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" item.date +\\\" \\\" +item.weather+\\\" \\\" +item.temp2m.toString+\\\" \\\" +wind10m_max \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s2(DisplaysForecastResults, \"DhVFkbIFc6S1Lp7U59WFuySBJnw=\", false, function () {\n  return [useDataApi];\n});\n\n_c = DisplaysForecastResults;\nexport default DisplaysForecastResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplaysForecastResults\");","map":{"version":3,"names":["useEffect","useState","axios","useDataApi","theUrl","date","data","setData","isLoading","setIsLoading","error","setError","fetchData","result","err","isError","msg","message","setIsError","url","seterror","DisplaysForecastResults","props","doFetch","theLocation","longitude","latitude","name","dataseries","map","item"],"sources":["C:/Users/zvito/WebstormProjects/ex3-ex3-tzvikitov_-_elifrancenhois/src/components/DisplaysForecastResults.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst useDataApi = (theUrl,date) => {\r\n    const [data, setData] = useState({}); // data to be fetched\r\n    // const [url, setUrl] = useState(initialUrl); // url to be fetched\r\n    const [isLoading, setIsLoading] = useState(false); // is it fetching?\r\n    const [error, setError] = useState(false, \"\"); // is there an error?\r\n\r\n    useEffect(() => {\r\n    const fetchData = async () => {\r\n        setError(false, \"\"); // reset error state\r\n        setIsLoading(true); // set loading state to true to show loading indicator for example\r\n        try {\r\n            const result = await axios(theUrl);\r\n            setData(result.data); // set data state\r\n        } catch (err) {\r\n            setError({isError: true, msg: err.message()}); // an error occurred, set error state to true\r\n        }\r\n        setIsLoading(false); // set loading state to false to hide loading indicator\r\n    };\r\n        fetchData(); // execute the function above\r\n\r\n    }, []);\r\n    // fetchData(); // execute the function above\r\n\r\n    // trigger the effect when url changes\r\n\r\n    return ({data, isLoading, error}); // return the data and the URL setter function\r\n};\r\n\r\n\r\nuseEffect(() => {\r\n    // this code returns a promise, but an effect can only return void or a cleanup function.\r\n    // so we need to wrap the promise in a function that returns void\r\n    const fetchData = async () => {\r\n        setIsError(false); // reset error state\r\n        setIsLoading(true); // set loading state to true to show loading indicator for example\r\n        try {\r\n            const result = await axios(url);\r\n            setData(result.data); // set data state\r\n        } catch (error) {\r\n            seterror(true); // an error occurred, set error state to true\r\n        }\r\n        setIsLoading(false); // set loading state to false to hide loading indicator\r\n\r\n    };\r\n\r\n    fetchData(); // execute the function above\r\n\r\n}, [url]); // trigger\r\n\r\nconst DisplaysForecastResults = (props) => {\r\n    const [{data, isLoading, error}, doFetch] = useDataApi(\"\",props.theLocation);\r\n    doFetch(\r\n        `https://www.7timer.info/bin/api.pl?lon=${props.theLocation.longitude}&lat=${props.theLocation.latitude}&product=civillight&output=json`\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <h3>{props.theLocation.name}</h3>\r\n            <img\r\n                src={`https:www.7timer.info/bin/astro.php?%20lon=${props.theLocation.longitude}&lat=${props.theLocation.latitude}&ac=0&lang=en&unit=metric&output=internal&tzshift=0`}/>\r\n            <>\r\n                {error.isError && <div>Something went wrong ({error.msg}</div>}\r\n\r\n                {isLoading ? (\r\n                    <div className=\"alert alert-warning\">Loading ...</div>\r\n                ) : (\r\n                    <ol>\r\n                        {data.dataseries.map(item => (\r\n                            <li> item.date +\" \" +item.weather+\" \" +item.temp2m.toString+\" \" +wind10m_max </li>\r\n                        ))}\r\n                    </ol>\r\n                )}\r\n            </>\r\n        </>);\r\n};\r\n\r\nexport default DisplaysForecastResults;"],"mappings":"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"},"metadata":{},"sourceType":"module"}