{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zvito\\\\WebstormProjects\\\\ex3-ex3-tzvikitov_-_elifrancenhois\\\\src\\\\components\\\\Forecast.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport DisplaysForecastResults from \"./DisplaysForecastResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Forecast = props => {\n  _s();\n\n  const [selectedLocation, setSelectedLocation] = useState({});\n  const [isSelected, setIsSelected] = useState(false);\n  const selectLocationsList = props.locations.map(location => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: location.name,\n    onClick: () => {\n      setSelectedLocation(location);\n      setIsSelected(false);\n    },\n    children: [location.name, \" \"]\n  }, location.name.toString(), true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this));\n\n  const locationDetails = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: selectedLocation.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card w-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: selectedLocation.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 40\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [selectedLocation.latitude, \"\\xB0 , \", selectedLocation.longitude, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 97\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this) : \"\"\n    }, void 0, false); //else return(<div>\"\"</div>);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forecast:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), isSelected ? /*#__PURE__*/_jsxDEV(DisplaysForecastResults, {\n      theLocation: selectedLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        if (selectedLocation.name) setIsSelected(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        size: \"8\",\n        multiple: true,\n        \"aria-label\": \"multiple select example\",\n        children: props.locations.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            onClick: () => {\n              setIsSelected(false);\n              setSelectedLocation({});\n            },\n            children: \"Select a location from the list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), selectLocationsList, \" \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"No locations yet. Go to the Locations tab to add a location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Show Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), locationDetails()]\n  }, void 0, true);\n};\n\n_s(Forecast, \"KG1Z4gAUuS1wNQD5YD2nE3YjSBc=\");\n\n_c = Forecast;\nexport default Forecast; // <div className=\"card w-50\">\n//     <div className=\"card-body\">\n//         <h5 className=\"card-title\">Card title</h5>\n//         <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n//         <a href=\"#\" className=\"btn btn-primary\">Button</a>\n//     </div>\n// </div>\n\n{\n  /*}&deg;*/\n} // <>\n//     {selectedLocation?(<>\n//         {selectedLocation.name} {selectedLocation.latitude}{','}  {selectedLocation.longitude}\n//     </>) : (\"\")}\n// </>\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["useState","DisplaysForecastResults","Forecast","props","selectedLocation","setSelectedLocation","isSelected","setIsSelected","selectLocationsList","locations","map","location","name","toString","locationDetails","latitude","longitude","event","preventDefault","length"],"sources":["C:/Users/zvito/WebstormProjects/ex3-ex3-tzvikitov_-_elifrancenhois/src/components/Forecast.js"],"sourcesContent":["import {useState} from \"react\";\nimport DisplaysForecastResults from \"./DisplaysForecastResults\";\n\n\nconst Forecast = (props) => {\n    const [selectedLocation, setSelectedLocation] = useState({});\n    const [isSelected, setIsSelected] = useState(false);\n    const selectLocationsList = props.locations.map((location) =>\n        <option key={location.name.toString()} value={location.name} onClick={() => {\n            setSelectedLocation(location);\n            setIsSelected(false)\n        }}>{location.name} </option>\n    );\nconst locationDetails=()=>{\n    return  (<>{selectedLocation.name?\n        <div className=\"card w-50\">\n            <div className=\"card-body\"><h5 className=\"card-title\">{selectedLocation.name}</h5>  <p className=\"card-text\">{selectedLocation.latitude}&deg; , {selectedLocation.longitude}&deg;</p></div>\n        </div> : \"\"}\n    </>);\n    //else return(<div>\"\"</div>);\n}\n\n\n\n    return (\n        <>\n            <h2>Forecast:</h2>\n            {isSelected ? <DisplaysForecastResults theLocation={selectedLocation}/> : \"\"}\n            <form onSubmit={(event) => {\n                event.preventDefault();\n                if (selectedLocation.name) setIsSelected(true);\n            }}>\n                <select className=\"form-select\" size=\"8\" multiple aria-label=\"multiple select example\">\n                    {props.locations.length > 0 ? <>\n                            <option selected onClick={() => {\n                                setIsSelected(false);\n                                setSelectedLocation({});\n                            }}>Select a location from the list\n                            </option>\n                            {selectLocationsList} </> :\n                        <option>No locations yet. Go to the Locations tab to add a location</option>}\n                </select>\n                <button type=\"submit\" className=\"btn btn-primary\">Show Forecast</button>\n            </form>\n            {locationDetails()}\n        </>);\n}\n\nexport default Forecast;\n// <div className=\"card w-50\">\n//     <div className=\"card-body\">\n//         <h5 className=\"card-title\">Card title</h5>\n//         <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n//         <a href=\"#\" className=\"btn btn-primary\">Button</a>\n//     </div>\n// </div>\n\n                    {/*}&deg;*/}\n\n// <>\n//     {selectedLocation?(<>\n//         {selectedLocation.name} {selectedLocation.latitude}{','}  {selectedLocation.longitude}\n//     </>) : (\"\")}\n// </>"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EACxB,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAMQ,mBAAmB,GAAGL,KAAK,CAACM,SAAN,CAAgBC,GAAhB,CAAqBC,QAAD,iBAC5C;IAAuC,KAAK,EAAEA,QAAQ,CAACC,IAAvD;IAA6D,OAAO,EAAE,MAAM;MACxEP,mBAAmB,CAACM,QAAD,CAAnB;MACAJ,aAAa,CAAC,KAAD,CAAb;IACH,CAHD;IAAA,WAGII,QAAQ,CAACC,IAHb;EAAA,GAAaD,QAAQ,CAACC,IAAT,CAAcC,QAAd,EAAb;IAAA;IAAA;IAAA;EAAA,QADwB,CAA5B;;EAMJ,MAAMC,eAAe,GAAC,MAAI;IACtB,oBAAS;MAAA,UAAGV,gBAAgB,CAACQ,IAAjB,gBACR;QAAK,SAAS,EAAC,WAAf;QAAA,uBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBAA2B;YAAI,SAAS,EAAC,YAAd;YAAA,UAA4BR,gBAAgB,CAACQ;UAA7C;YAAA;YAAA;YAAA;UAAA,QAA3B,qBAAoF;YAAG,SAAS,EAAC,WAAb;YAAA,WAA0BR,gBAAgB,CAACW,QAA3C,aAA6DX,gBAAgB,CAACY,SAA9E;UAAA;YAAA;YAAA;YAAA;UAAA,QAApF;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADQ,GAGC;IAHJ,iBAAT,CADsB,CAMtB;EACH,CAPD;;EAWI,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKV,UAAU,gBAAG,QAAC,uBAAD;MAAyB,WAAW,EAAEF;IAAtC;MAAA;MAAA;MAAA;IAAA,QAAH,GAA+D,EAF9E,eAGI;MAAM,QAAQ,EAAGa,KAAD,IAAW;QACvBA,KAAK,CAACC,cAAN;QACA,IAAId,gBAAgB,CAACQ,IAArB,EAA2BL,aAAa,CAAC,IAAD,CAAb;MAC9B,CAHD;MAAA,wBAII;QAAQ,SAAS,EAAC,aAAlB;QAAgC,IAAI,EAAC,GAArC;QAAyC,QAAQ,MAAjD;QAAkD,cAAW,yBAA7D;QAAA,UACKJ,KAAK,CAACM,SAAN,CAAgBU,MAAhB,GAAyB,CAAzB,gBAA6B;UAAA,wBACtB;YAAQ,QAAQ,MAAhB;YAAiB,OAAO,EAAE,MAAM;cAC5BZ,aAAa,CAAC,KAAD,CAAb;cACAF,mBAAmB,CAAC,EAAD,CAAnB;YACH,CAHD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADsB,EAMrBG,mBANqB;QAAA,gBAA7B,gBAOG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MARR;QAAA;QAAA;QAAA;MAAA,QAJJ,eAcI;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAC,iBAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAmBKM,eAAe,EAnBpB;EAAA,gBADJ;AAsBH,CA1CD;;GAAMZ,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEoB;EAAC;AAAW,C,CAEhC;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}