{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zvito\\\\WebstormProjects\\\\ex3-ex3-tzvikitov_-_elifrancenhois\\\\src\\\\components\\\\AddLocationForm.js\",\n    _s = $RefreshSig$();\n\nimport { Outlet } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddLocationForm(props) {\n  _s();\n\n  const requiredMessage = \" input is required\";\n  const nonNumMessage = \"not number\";\n  const latOutRangeMessage = \"-90 90\";\n  const lonOutRangeMessage = \"-190 190\";\n  const [inputs, setInputs] = useState({});\n  const [validationInputs, setValidationInputs] = useState({// name: {\n    //     isValid: false,\n    //     errorMessage: requiredMessage\n    // }, latitude: {\n    //     isValid: false,\n    //     errorMessage: requiredMessage\n    // }, longitude: {\n    //     isValid: false,\n    //     errorMessage: requiredMessage\n    // }\n  });\n  const [inputsArrValid, setInputsArrValid] = useState(false);\n\n  function nonEmptyValidation(key, val) {\n    setValidationInputs(validationInputs => ({ ...validationInputs,\n      [key]: {\n        isValid: val !== \"\" && val !== undefined,\n        errorMessage: key + requiredMessage\n      }\n    }));\n  }\n\n  function locationsValidation(key, val) {\n    let isNonEmpty = val !== \"\" && val !== undefined;\n    nonEmptyValidation(key, val); //???????\n\n    let isnumber = !isNaN(Number(val));\n\n    if (isNonEmpty) {\n      setValidationInputs(validationInputs => ({ ...validationInputs,\n        [key]: {\n          isValid: isnumber,\n          errorMessage: nonNumMessage\n        }\n      }));\n\n      if (isnumber) {\n        setValidationInputs(validationInputs => ({ ...validationInputs,\n          [key === \"latitude\" ? \"latitude\" : \"longitude\"]: {\n            isValid: key === \"latitude\" ? Number(val) >= -90.0 && Number(val) <= 90.0 : Number(val) >= -180.0 && Number(val) <= 180.0,\n            errorMessage: key === \"latitude\" ? latOutRangeMessage : lonOutRangeMessage\n          }\n        }));\n      }\n    }\n  }\n\n  const handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setInputs(values => ({ ...values,\n      [name]: value\n    }));\n  };\n\n  useEffect(() => {\n    nonEmptyValidation(\"name\", inputs.name);\n  }, [inputs.name]);\n  useEffect(() => {}, [inputs.latitude]);\n\n  const handleAddLocation = event => {\n    event.preventDefault();\n    props.locations.setLocations([...props.locations.locationsList, {\n      name: inputs.name,\n      latitude: inputs.latitude,\n      longitude: inputs.longitude\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"border p-3\",\n    onSubmit: handleAddLocation,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Location:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 col\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nameInput\",\n        className: \"form-label\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"nameInput\",\n        name: \"name\",\n        value: inputs.name || \"\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: validationInputs.name.isValid ? \"\" : \"text-danger is-invalid\",\n        children: [\" \", validationInputs.name.isValid ? \"\" : validationInputs.name.errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 col\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"latitudeInput\",\n        className: \"form-label\",\n        children: \"Latitude:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"latitudeInput\",\n        name: \"latitude\",\n        value: inputs.latitude || \"\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: validationInputs.latitude.isValid ? \"\" : \"text-danger is-invalid\",\n        children: [\" \", validationInputs.latitude.isValid ? \"\" : validationInputs.latitude.errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 col\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"longitudeInput\",\n        className: \"form-label\",\n        children: \"Longitude:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"longitudeInput\",\n        name: \"longitude\",\n        value: inputs.longitude || \"\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: validationInputs.longitude.isValid ? \"\" : \"text-danger is-invalid\",\n        children: [\" \", validationInputs.longitude.isValid ? \"\" : validationInputs.longitude.errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Add Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n} // function updateValidationInputs() {\n//     let allAreValid = true;\n//     // let theInputs = Object.entries(inputs);\n//     for (let input of Object.entries(inputs)) {\n//         if (input[0] !== \"name\") {\n//             if (isNaN(Number(input[1]))) allAreValid = false;\n//             setValidationInputs(validationInputs => ({\n//                 ...validationInputs,\n//                 [input[0]]: {isValid: !isNaN(Number(input[1])), errorMessage: nonNumMessage}\n//             }));\n//\n//\n//         }\n//\n//         if (input[1].length < 1) allAreValid = false;\n//         setValidationInputs(validationInputs => ({\n//             ...validationInputs,\n//             [input[0]]: {isValid: input[1].length > 0, errorMessage: input[0] + requiredMessage}\n//         }));\n//\n//\n//     }\n//     return false\n// }\n// if (updateValidationInputs()) { // if the input is less than 5 characters or contains a number\n//     setInputsArrValid(false);\n// } else {\n//     setInputsArrValid(true);\n// }\n\n_s(AddLocationForm, \"seVFGfYAXfSgr/WQsEOQike6Sbo=\");\n\n_c = AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationForm\");","map":{"version":3,"names":["Outlet","useEffect","useState","AddLocationForm","props","requiredMessage","nonNumMessage","latOutRangeMessage","lonOutRangeMessage","inputs","setInputs","validationInputs","setValidationInputs","inputsArrValid","setInputsArrValid","nonEmptyValidation","key","val","isValid","undefined","errorMessage","locationsValidation","isNonEmpty","isnumber","isNaN","Number","handleChange","event","name","target","value","values","latitude","handleAddLocation","preventDefault","locations","setLocations","locationsList","longitude"],"sources":["C:/Users/zvito/WebstormProjects/ex3-ex3-tzvikitov_-_elifrancenhois/src/components/AddLocationForm.js"],"sourcesContent":["import {Outlet} from \"react-router\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport default function AddLocationForm(props) {\r\n\r\n    const requiredMessage = \" input is required\";\r\n    const nonNumMessage = \"not number\";\r\n    const latOutRangeMessage = \"-90 90\";\r\n    const lonOutRangeMessage = \"-190 190\";\r\n\r\n    const [inputs, setInputs] = useState({})\r\n    const [validationInputs, setValidationInputs] = useState({\r\n        // name: {\r\n        //     isValid: false,\r\n        //     errorMessage: requiredMessage\r\n        // }, latitude: {\r\n        //     isValid: false,\r\n        //     errorMessage: requiredMessage\r\n        // }, longitude: {\r\n        //     isValid: false,\r\n        //     errorMessage: requiredMessage\r\n        // }\r\n    })\r\n    const [inputsArrValid, setInputsArrValid] = useState(false);\r\n\r\n    function nonEmptyValidation(key,val){\r\n        setValidationInputs(validationInputs => ({\r\n            ...validationInputs,\r\n            [key]: {isValid: val!== \"\" && val !== undefined, errorMessage: key + requiredMessage}\r\n        }));\r\n    }\r\n\r\n    function locationsValidation(key,val){\r\n        let isNonEmpty = val !== \"\" && val !== undefined;\r\n        nonEmptyValidation(key,val);//???????\r\n        let isnumber = !isNaN(Number(val));\r\n        if (isNonEmpty) {\r\n            setValidationInputs(validationInputs => ({\r\n                ...validationInputs,\r\n                [key]: {isValid: isnumber, errorMessage: nonNumMessage}\r\n            }));\r\n            if (isnumber) {\r\n                setValidationInputs(validationInputs => ({\r\n                    ...validationInputs,\r\n                    [key===\"latitude\"?\"latitude\":\"longitude\"]: {\r\n                        isValid: key===\"latitude\"? Number(val) >= -90.0 && Number(val) <= 90.0 :Number(val) >= -180.0 && Number(val) <= 180.0,\r\n                        errorMessage: key===\"latitude\"?latOutRangeMessage:lonOutRangeMessage\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}))\r\n    }\r\n    useEffect(() => {\r\n        nonEmptyValidation(\"name\",inputs.name);\r\n    }, [inputs.name]);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [inputs.latitude]);\r\n\r\n    const handleAddLocation = (event) => {\r\n        event.preventDefault();\r\n        props.locations.setLocations([...props.locations.locationsList, {\r\n            name: inputs.name,\r\n            latitude: inputs.latitude,\r\n            longitude: inputs.longitude\r\n        }]);\r\n    }\r\n    return (\r\n        <form className=\"border p-3\" onSubmit={handleAddLocation}>\r\n            <h2>Add Location:</h2>\r\n            <div className=\"mb-3 col\">\r\n                <label htmlFor=\"nameInput\" className=\"form-label\">Name:</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"nameInput\" name=\"name\" value={inputs.name || \"\"}\r\n                       onChange={handleChange}/>\r\n                <div\r\n                    className={validationInputs.name.isValid ? \"\" : \"text-danger is-invalid\"}> {validationInputs.name.isValid ? \"\" : validationInputs.name.errorMessage}</div>\r\n            </div>\r\n            <div className=\"mb-3 col\">\r\n                <label htmlFor=\"latitudeInput\" className=\"form-label\">Latitude:</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"latitudeInput\" name=\"latitude\"\r\n                       value={inputs.latitude || \"\"}\r\n                       onChange={handleChange}/>\r\n                <div\r\n                    className={validationInputs.latitude.isValid ? \"\" : \"text-danger is-invalid\"}> {validationInputs.latitude.isValid ? \"\" : validationInputs.latitude.errorMessage}</div>\r\n            </div>\r\n            <div className=\"mb-3 col\">\r\n                <label htmlFor=\"longitudeInput\" className=\"form-label\">Longitude:</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"longitudeInput\" name=\"longitude\"\r\n                       value={inputs.longitude || \"\"}\r\n                       onChange={handleChange}/>\r\n                <div\r\n                    className={validationInputs.longitude.isValid ? \"\" : \"text-danger is-invalid\"}> {validationInputs.longitude.isValid ? \"\" : validationInputs.longitude.errorMessage}</div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Add Location</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\n// function updateValidationInputs() {\r\n//     let allAreValid = true;\r\n//     // let theInputs = Object.entries(inputs);\r\n//     for (let input of Object.entries(inputs)) {\r\n//         if (input[0] !== \"name\") {\r\n//             if (isNaN(Number(input[1]))) allAreValid = false;\r\n//             setValidationInputs(validationInputs => ({\r\n//                 ...validationInputs,\r\n//                 [input[0]]: {isValid: !isNaN(Number(input[1])), errorMessage: nonNumMessage}\r\n//             }));\r\n//\r\n//\r\n//         }\r\n//\r\n//         if (input[1].length < 1) allAreValid = false;\r\n//         setValidationInputs(validationInputs => ({\r\n//             ...validationInputs,\r\n//             [input[0]]: {isValid: input[1].length > 0, errorMessage: input[0] + requiredMessage}\r\n//         }));\r\n//\r\n//\r\n//     }\r\n//     return false\r\n// }\r\n\r\n\r\n// if (updateValidationInputs()) { // if the input is less than 5 characters or contains a number\r\n//     setInputsArrValid(false);\r\n// } else {\r\n//     setInputsArrValid(true);\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}