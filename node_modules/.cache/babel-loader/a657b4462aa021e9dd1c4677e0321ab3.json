{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zvito\\\\WebstormProjects\\\\ex3-ex3-tzvikitov_-_elifrancenhois\\\\src\\\\components\\\\AddLocationForm.js\",\n    _s = $RefreshSig$();\n\nimport { Outlet } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddLocationForm(props) {\n  _s();\n\n  const requiredMessage = \" is required\";\n  const nonNumMessage = \"Value must be a decimal number: only a number, a signal minus and a signal dot are allowed\";\n  const latOutRangeMessage = \"Value must be a decimal between -90.0 and 90.0\";\n  const lonOutRangeMessage = \"Value must be a decimal between -190.0 and 190.0\";\n  const doubleLocationMessage = \"The place already exists on the list\";\n  const [inputs, setInputs] = useState({});\n  const [validationInputs, setValidationInputs] = useState({\n    name: {\n      isValid: true\n    },\n    latitude: {\n      isValid: true\n    },\n    longitude: {\n      isValid: true\n    }\n  });\n  const [inputsArrValid, setInputsArrValid] = useState(false);\n\n  function singleLocationValidation(inputName) {\n    let isSingle = props.locations.locationsList.every(location => location.name !== inputName);\n    setValidationInputs(validationInputs => ({ ...validationInputs,\n      name: {\n        isValid: isSingle,\n        errorMessage: doubleLocationMessage\n      }\n    }));\n  }\n\n  function nonEmptyValidation(key, val) {\n    setValidationInputs(validationInputs => ({ ...validationInputs,\n      [key]: {\n        isValid: val !== undefined && /^[a-zA-Z. ]+$/.test(val.trim()),\n        errorMessage: \"Valid \" + key + requiredMessage\n      }\n    }));\n    return val !== undefined && /^[a-zA-Z. ]+$/.test(val.trim());\n  }\n\n  function locationsValidation(key, val) {\n    let isNonEmpty = val !== undefined && val.trim() !== \"\";\n    nonEmptyValidation(key, val);\n    let isnumber = !isNaN(Number(val));\n\n    if (isNonEmpty) {\n      setValidationInputs(validationInputs => ({ ...validationInputs,\n        [key]: {\n          isValid: isnumber,\n          errorMessage: nonNumMessage\n        }\n      }));\n\n      if (isnumber) {\n        setValidationInputs(validationInputs => ({ ...validationInputs,\n          [key === \"latitude\" ? \"latitude\" : \"longitude\"]: {\n            isValid: key === \"latitude\" ? Number(val) >= -90.0 && Number(val) <= 90.0 : Number(val) >= -180.0 && Number(val) <= 180.0,\n            errorMessage: key === \"latitude\" ? latOutRangeMessage : lonOutRangeMessage\n          }\n        }));\n      }\n    }\n  }\n\n  const handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setInputs(values => ({ ...values,\n      [name]: value\n    }));\n  };\n\n  useEffect(() => {\n    console.log(inputs);\n    if (nonEmptyValidation(\"name\", inputs.name)) singleLocationValidation(inputs.name);\n  }, [inputs.name]);\n  useEffect(() => {\n    locationsValidation(\"latitude\", inputs.latitude);\n  }, [inputs.latitude]);\n  useEffect(() => {\n    locationsValidation(\"longitude\", inputs.longitude);\n  }, [inputs.longitude]);\n\n  const handleAddLocation = event => {\n    event.preventDefault();\n    const allValidations = Object.entries(validationInputs);\n\n    if (allValidations.every(validation => validation[1].errorMessage === undefined)) {\n      setValidationInputs({\n        name: {\n          isValid: false\n        },\n        latitude: {\n          isValid: false\n        },\n        longitude: {\n          isValid: false\n        }\n      });\n    }\n\n    if (allValidations.every(validation => validation[1].isValid)) {\n      props.locations.setLocations([...props.locations.locationsList, {\n        name: inputs.name,\n        latitude: inputs.latitude,\n        longitude: inputs.longitude\n      }]);\n      setInputs({});\n    }\n\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-md-6 mb-2 mb-2 mt-3 ml-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"border p-3 bg-light\",\n      onSubmit: handleAddLocation,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nameInput\",\n          className: \"form-label\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"nameInput\",\n          name: \"name\",\n          value: inputs.name || \"\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: validationInputs.name.isValid ? \"\" : \"text-danger is-invalid\",\n          children: [\" \", validationInputs.name.isValid ? \"\" : validationInputs.name.errorMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"latitudeInput\",\n          className: \"form-label\",\n          children: \"Latitude:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"latitudeInput\",\n          name: \"latitude\",\n          value: inputs.latitude || \"\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: validationInputs.latitude.isValid ? \"\" : \"text-danger is-invalid\",\n          children: [\" \", validationInputs.latitude.isValid ? \"\" : validationInputs.latitude.errorMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"longitudeInput\",\n          className: \"form-label\",\n          children: \"Longitude:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"longitudeInput\",\n          name: \"longitude\",\n          value: inputs.longitude || \"\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: validationInputs.longitude.isValid ? \"\" : \"text-danger is-invalid\",\n          children: [\" \", validationInputs.longitude.isValid ? \"\" : validationInputs.longitude.errorMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Add Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n} //\n// function Input(){\n//     return(\n// <div className=\"mb-3 col\">\n//     <label htmlFor=\"nameInput\" className=\"form-label\">Name:</label>\n//     <input type=\"text\" className=\"form-control\" id=\"nameInput\" name=\"name\" value={inputs.name || \"\"}\n//            onChange={handleChange}/>\n//     <div\n//         className={validationInputs.name.isValid ? \"\" : \"text-danger is-invalid\"}> {validationInputs.name.isValid ? \"\" : validationInputs.name.errorMessage}</div>\n// </div>);\n// }\n// function updateValidationInputs() {\n//     let allAreValid = true;\n//     // let theInputs = Object.entries(inputs);\n//     for (let input of Object.entries(inputs)) {\n//         if (input[0] !== \"name\") {\n//             if (isNaN(Number(input[1]))) allAreValid = false;\n//             setValidationInputs(validationInputs => ({\n//                 ...validationInputs,\n//                 [input[0]]: {isValid: !isNaN(Number(input[1])), errorMessage: nonNumMessage}\n//             }));\n//\n//\n//         }\n//\n//         if (input[1].length < 1) allAreValid = false;\n//         setValidationInputs(validationInputs => ({\n//             ...validationInputs,\n//             [input[0]]: {isValid: input[1].length > 0, errorMessage: input[0] + requiredMessage}\n//         }));\n//\n//\n//     }\n//     return false\n// }\n// if (updateValidationInputs()) { // if the input is less than 5 characters or contains a number\n//     setInputsArrValid(false);\n// } else {\n//     setInputsArrValid(true);\n// }\n\n_s(AddLocationForm, \"Nlzq9jDugr/37Ybntgu9VGeq7E0=\");\n\n_c = AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationForm\");","map":{"version":3,"names":["Outlet","useEffect","useState","AddLocationForm","props","requiredMessage","nonNumMessage","latOutRangeMessage","lonOutRangeMessage","doubleLocationMessage","inputs","setInputs","validationInputs","setValidationInputs","name","isValid","latitude","longitude","inputsArrValid","setInputsArrValid","singleLocationValidation","inputName","isSingle","locations","locationsList","every","location","errorMessage","nonEmptyValidation","key","val","undefined","test","trim","locationsValidation","isNonEmpty","isnumber","isNaN","Number","handleChange","event","target","value","values","console","log","handleAddLocation","preventDefault","allValidations","Object","entries","validation","setLocations"],"sources":["C:/Users/zvito/WebstormProjects/ex3-ex3-tzvikitov_-_elifrancenhois/src/components/AddLocationForm.js"],"sourcesContent":["import {Outlet} from \"react-router\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport default function AddLocationForm(props) {\r\n\r\n    const requiredMessage = \" is required\";\r\n    const nonNumMessage = \"Value must be a decimal number: only a number, a signal minus and a signal dot are allowed\";\r\n    const latOutRangeMessage = \"Value must be a decimal between -90.0 and 90.0\";\r\n    const lonOutRangeMessage = \"Value must be a decimal between -190.0 and 190.0\";\r\n    const doubleLocationMessage = \"The place already exists on the list\";\r\n\r\n    const [inputs, setInputs] = useState({})\r\n    const [validationInputs, setValidationInputs] = useState({name: {isValid:true}, latitude: {isValid:true}, longitude: {isValid:true}})\r\n    const [inputsArrValid, setInputsArrValid] = useState(false);\r\n\r\n    function singleLocationValidation(inputName){\r\n       let isSingle =props.locations.locationsList.every( (location)=>location.name!==inputName);\r\n        setValidationInputs(validationInputs => ({\r\n            ...validationInputs,\r\n           name: {\r\n                isValid: isSingle,\r\n                errorMessage: doubleLocationMessage\r\n            }\r\n        }));\r\n    }\r\n\r\n\r\n    function nonEmptyValidation(key, val) {\r\n        setValidationInputs(validationInputs => ({\r\n            ...validationInputs,\r\n            [key]: {\r\n                isValid: val !== undefined && /^[a-zA-Z. ]+$/.test(val.trim()),\r\n                errorMessage: \"Valid \" + key + requiredMessage\r\n            }\r\n        }));\r\n        return val !== undefined && /^[a-zA-Z. ]+$/.test(val.trim());\r\n    }\r\n\r\n    function locationsValidation(key, val) {\r\n        let isNonEmpty = val !== undefined && val.trim() !== \"\";\r\n        nonEmptyValidation(key, val);\r\n        let isnumber = !isNaN(Number(val));\r\n        if (isNonEmpty) {\r\n            setValidationInputs(validationInputs => ({\r\n                ...validationInputs,\r\n                [key]: {isValid: isnumber, errorMessage: nonNumMessage}\r\n            }));\r\n            if (isnumber) {\r\n                setValidationInputs(validationInputs => ({\r\n                    ...validationInputs,\r\n                    [key === \"latitude\" ? \"latitude\" : \"longitude\"]: {\r\n                        isValid: key === \"latitude\" ? Number(val) >= -90.0 && Number(val) <= 90.0 : Number(val) >= -180.0 && Number(val) <= 180.0,\r\n                        errorMessage: key === \"latitude\" ? latOutRangeMessage : lonOutRangeMessage\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}))\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(inputs);\r\n        if(nonEmptyValidation(\"name\", inputs.name))\r\n        singleLocationValidation(inputs.name);\r\n    }, [inputs.name]);\r\n\r\n    useEffect(() => {\r\n        locationsValidation(\"latitude\", inputs.latitude)\r\n    }, [inputs.latitude]);\r\n\r\n    useEffect(() => {\r\n        locationsValidation(\"longitude\", inputs.longitude)\r\n    }, [inputs.longitude]);\r\n\r\n    const handleAddLocation = (event) => {\r\n        event.preventDefault();\r\n        const allValidations =Object.entries(validationInputs);\r\n        if(allValidations.every((validation)=>validation[1].errorMessage===undefined)){\r\n            setValidationInputs({name: {isValid:false}, latitude: {isValid:false}, longitude: {isValid:false}})\r\n        }\r\n        if(allValidations.every((validation)=>validation[1].isValid)){\r\n            props.locations.setLocations([...props.locations.locationsList, {\r\n                name: inputs.name,\r\n                latitude: inputs.latitude,\r\n                longitude: inputs.longitude\r\n            }]);\r\n            setInputs({});\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n    return (\r\n        <div className={\"col-12 col-md-6 mb-2 mb-2 mt-3 ml-5\"}>\r\n        <form className=\"border p-3 bg-light\" onSubmit={handleAddLocation}>\r\n            <h2>Add Location:</h2>\r\n            <div className=\"mb-3 col\">\r\n                <label htmlFor=\"nameInput\" className=\"form-label\">Name:</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"nameInput\" name=\"name\" value={inputs.name || \"\"}\r\n                       onChange={handleChange}/>\r\n                <div\r\n                    className={validationInputs.name.isValid ? \"\" : \"text-danger is-invalid\"}> {validationInputs.name.isValid ? \"\" : validationInputs.name.errorMessage}</div>\r\n            </div>\r\n            <div className=\"mb-3 col\">\r\n                <label htmlFor=\"latitudeInput\" className=\"form-label\">Latitude:</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"latitudeInput\" name=\"latitude\"\r\n                       value={inputs.latitude || \"\"}\r\n                       onChange={handleChange}/>\r\n                <div\r\n                    className={validationInputs.latitude.isValid ? \"\" : \"text-danger is-invalid\"}> {validationInputs.latitude.isValid ? \"\" : validationInputs.latitude.errorMessage}</div>\r\n            </div>\r\n            <div className=\"mb-3 col\">\r\n                <label htmlFor=\"longitudeInput\" className=\"form-label\">Longitude:</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"longitudeInput\" name=\"longitude\"\r\n                       value={inputs.longitude || \"\"}\r\n                       onChange={handleChange}/>\r\n                <div\r\n                    className={validationInputs.longitude.isValid ? \"\" : \"text-danger is-invalid\"}> {validationInputs.longitude.isValid ? \"\" : validationInputs.longitude.errorMessage}</div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Add Location</button>\r\n        </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n//\r\n// function Input(){\r\n//     return(\r\n// <div className=\"mb-3 col\">\r\n//     <label htmlFor=\"nameInput\" className=\"form-label\">Name:</label>\r\n//     <input type=\"text\" className=\"form-control\" id=\"nameInput\" name=\"name\" value={inputs.name || \"\"}\r\n//            onChange={handleChange}/>\r\n//     <div\r\n//         className={validationInputs.name.isValid ? \"\" : \"text-danger is-invalid\"}> {validationInputs.name.isValid ? \"\" : validationInputs.name.errorMessage}</div>\r\n// </div>);\r\n// }\r\n// function updateValidationInputs() {\r\n//     let allAreValid = true;\r\n//     // let theInputs = Object.entries(inputs);\r\n//     for (let input of Object.entries(inputs)) {\r\n//         if (input[0] !== \"name\") {\r\n//             if (isNaN(Number(input[1]))) allAreValid = false;\r\n//             setValidationInputs(validationInputs => ({\r\n//                 ...validationInputs,\r\n//                 [input[0]]: {isValid: !isNaN(Number(input[1])), errorMessage: nonNumMessage}\r\n//             }));\r\n//\r\n//\r\n//         }\r\n//\r\n//         if (input[1].length < 1) allAreValid = false;\r\n//         setValidationInputs(validationInputs => ({\r\n//             ...validationInputs,\r\n//             [input[0]]: {isValid: input[1].length > 0, errorMessage: input[0] + requiredMessage}\r\n//         }));\r\n//\r\n//\r\n//     }\r\n//     return false\r\n// }\r\n\r\n\r\n// if (updateValidationInputs()) { // if the input is less than 5 characters or contains a number\r\n//     setInputsArrValid(false);\r\n// } else {\r\n//     setInputsArrValid(true);\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}